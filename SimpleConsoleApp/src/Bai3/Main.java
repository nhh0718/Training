package Bai3;import java.util.*;import java.util.concurrent.atomic.AtomicInteger;public class Main {  public static void main(String[] args) {    Scanner sc = new Scanner(System.in);    AtomicInteger counter = new AtomicInteger(0);    Map<Integer, Nation> listN = new HashMap<>();    while(true){      System.out.println("**********************MENU*********************");      System.out.println("1.Nhap danh sach gom n quoc gia voi key tang");      System.out.println("2. Hien thi danh sach quoc gia");      System.out.println("3. Hien thi danh sach sap xep tang dan");      System.out.println("4. Thoat");      System.out.print("Lua chon: ");      int choice = Integer.parseInt(sc.nextLine());      switch (choice){        case 1:          System.out.print("Nhap so quoc gia: ");          int n = Integer.parseInt(sc.nextLine());          for (int i = 0; i < n; i++) {            Nation nt = new Nation();            System.out.printf("Nhap quoc gia thu %d", i+1);            System.out.print("Ma: ");            nt.setNationId(sc.nextLine());            System.out.print("Ten: ");            nt.setNationName(sc.nextLine());            System.out.print("Trang thai: ");            nt.setNationStatus(Boolean.parseBoolean(sc.nextLine()));            listN.put(counter.getAndIncrement(), nt);          }          break;        case 2:          for (Nation n1 : listN.values()) {            System.out.printf("Ma: %s - Ten: %s - Trang thai: %b\n", n1.getNationId(), n1.getNationName(), n1.isNationStatus());          }          break;        case 3:          ArrayList<Nation> listN1 = new ArrayList<>(listN.values());          Collections.sort(listN1, new Comparator<Nation>() {            @Override            public int compare(Nation o1, Nation o2) {              return o1.getNationName().compareTo(o2.getNationName());            }          });          for (Nation n1 : listN1) {            System.out.printf("Ma: %s - Ten: %s - Trang thai: %b\n", n1.getNationId(), n1.getNationName(), n1.isNationStatus());          }          break;        case 4:          System.out.println("Bye!!");          System.exit(0);          break;        default:          System.out.println("1-4");      }    }  }}