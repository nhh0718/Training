package Bai4;import java.io.*;import java.util.*;public class ProductManagement {  public static void main(String[] args) {    Scanner sc = new Scanner(System.in);    ArrayList<Product> listP = new ArrayList<>();    while (true) {      System.out.println("**********************MENU*********************");      System.out.println("1.Nhap thong tin n san pham");      System.out.println("2. Sap xep san pham theo gia tang dan");      System.out.println("3. Hien thi thong tin san pham");      System.out.println("4. Ghi tat ca san pham co gia lon hon 500k ra file");      System.out.println("5. Doc file va ghi ra cac san pham < 1tr");      System.out.print("Lua chon: ");      int choice = Integer.parseInt(sc.nextLine());      switch (choice) {        case 1:          System.out.print("Nhap vao so san pham: ");          int n = Integer.parseInt(sc.nextLine());          for (int i = 0; i < n; i++) {            Product p = new Product();            System.out.printf("Nhap vao san pham thu: %s\n", i + 1);            System.out.print("ID: ");            p.setProId(sc.nextLine());            System.out.print("Name: ");            p.setProName(sc.nextLine());            System.out.print("Producer: ");            p.setProducer(sc.nextLine());            System.out.print("Year marking: ");            p.setYearMarking(Integer.parseInt(sc.nextLine()));            System.out.print("Price: ");            p.setPrice(Float.parseFloat(sc.nextLine()));            listP.add(p);          }          break;        case 2:          Collections.sort(              listP,              (o1, o2) -> {                return Float.compare(o1.getPrice(), o2.getPrice());              });          System.out.println("Sap xep xong!!!");          break;        case 3:          for (Product product : listP) {            System.out.println(product.toString());          }          break;        case 4:          File file = null;          FileOutputStream fos = null;          ObjectOutputStream oos = null;          try {            file = new File("product.txt");            fos = new FileOutputStream(file);            oos = new ObjectOutputStream(fos);            for (Product p : listP) {              if (p.getPrice() > 500000) {                oos.writeObject(p);              }            }            // oos.writeObject(listP);          } catch (Exception e) {            e.printStackTrace();          } finally {            if (oos != null) {              try {                oos.close();              } catch (IOException e) {                e.printStackTrace();              }            }            if (fos != null) {              try {                fos.close();              } catch (IOException e) {                e.printStackTrace();              }            }          }          break;        case 5:          File file1;          FileInputStream fis = null;          ObjectInputStream ois = null;          try {            file1 = new File("product.txt");            fis = new FileInputStream(file1);            ois = new ObjectInputStream(fis);            // List<Product> lp = new ArrayList<>();            boolean cont = true;            while (fis.available() > 0) {              Product p = (Product) ois.readObject();              listP.add(p);            }            for (Product product : listP) {              if (product.getPrice() < 1000000) {                System.out.println(product.toString());              }            }          } catch (Exception e) {            e.printStackTrace();          } finally {            if (ois != null) {              try {                ois.close();              } catch (IOException e) {                e.printStackTrace();              }            }            if (fis != null) {              try {                fis.close();              } catch (IOException e) {                e.printStackTrace();              }            }          }          break;        case 6:          System.out.println("Bye");          System.exit(0);        default:          System.out.println("1-6");      }    }  }}