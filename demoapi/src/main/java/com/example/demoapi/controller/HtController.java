package com.example.demoapi.controller;import com.example.demoapi.ResourceException;import com.example.demoapi.dto.HtDto;import com.example.demoapi.mapper.HtMapper;import com.example.demoapi.model.HtModel;import com.example.demoapi.service.HtService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import javax.validation.Valid;import java.util.List;import java.util.Optional;@RestController@RequestMapping(value = "api/v1")public class HtController {	@Autowired	HtService htService;	@Autowired	HtMapper htMapper;	@GetMapping("/ht")	public ResponseEntity<List<HtDto>> findAll() {		return new ResponseEntity<>(htService.getAll(), HttpStatus.OK);	}	@PostMapping("/ht")	public ResponseEntity<HtModel> create(@Valid @RequestBody HtDto htDto) {		return new ResponseEntity<>(htService.save(htMapper.dtoToModel(htDto)), HttpStatus.CREATED);	}	@PutMapping("/ht/{id}")	public ResponseEntity<HtModel> update(@PathVariable Integer id, @RequestBody HtDto htDto) {		Optional<HtModel> htModel = htService.getById(id);		return htModel.map(ht1 -> {			htDto.setIdht(ht1.getIdht());			return new ResponseEntity<>(htService.save(htMapper.dtoToModel(htDto)), HttpStatus.OK);		}).orElseThrow(() -> new ResourceException(HttpStatus.NOT_FOUND, "HT Not Found!!!"));	}	@DeleteMapping("/ht/{id}")	public ResponseEntity<HtModel> delete(@PathVariable Integer id) {		Optional<HtModel> htModel = htService.getById(id);		return htModel.map(ht -> {			htService.delete(id);			return new ResponseEntity<>(ht, HttpStatus.OK);		}).orElseThrow(() -> new ResourceException(HttpStatus.NOT_FOUND, "Not Found."));	}}