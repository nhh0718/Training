package com.example.demoapi.service;import com.example.demoapi.ResourceException;import com.example.demoapi.dto.HtDto;import com.example.demoapi.mapper.HtMapper;import com.example.demoapi.model.HtModel;import com.example.demoapi.repository.HtRepository;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.stereotype.Service;import java.util.List;import java.util.Optional;@Servicepublic class HtServiceImpl implements HtService{	@Autowired	HtRepository htRepository;	@Autowired	HtMapper htMapper;	@Override	public List<HtDto> getAll() {		return htMapper.modelsToDtos(htRepository.findAll());	}	@Override	public HtModel save(HtModel htModel) {		List<HtModel> htModelList = htRepository.findAll();		for (HtModel ht:			 htModelList) {			if (htModel.getHtcol1().equalsIgnoreCase(ht.getHtcol1())){				throw new ResourceException(HttpStatus.BAD_REQUEST, "Tr√πng user " + ht.getHtcol1());			}		}		return htRepository.save(htModel);	}	@Override	public void delete(Integer id) {		htRepository.delete(htRepository.getById(id));	}	@Override	public Optional<HtModel> getById(Integer id) {		return htRepository.findById(id);	}}